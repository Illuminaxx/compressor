{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","s","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee55c93a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAwjxAoS_m_cvvRL9N_2Ux40Ji50VqCqH4\",\r\n    authDomain: \"illuminaxx-firegrame.firebaseapp.com\",\r\n    databaseURL: \"https://illuminaxx-firegrame.firebaseio.com\",\r\n    projectId: \"illuminaxx-firegrame\",\r\n    storageBucket: \"illuminaxx-firegrame.appspot.com\",\r\n    messagingSenderId: \"947701552144\",\r\n    appId: \"1:947701552144:web:420bc785cd28abb0a9e695\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage =  firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };","import {useState, useEffect } from 'react'\r\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config'\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage)\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({\r\n                url, createdAt\r\n            });\r\n            setUrl(url)\r\n        })\r\n    }, [file]);\r\n\r\n    return { progress, url, error }\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n    const { url, progress } = useStorage(file);\r\n\r\n    useEffect(() => {\r\n        if(url) {\r\n            setFile(null);\r\n        }\r\n    }, [url, setFile]);\r\n\r\n    return(\r\n        <motion.div className=\"progress-bar\"\r\n        initial={{ width: 0 }}\r\n        animate={{ width: progress + '%' }} \r\n        ></motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar; ","import React, { useState } from 'react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = ['image/png', 'image/jpeg']\r\n\r\n    const changeHandler = (e) => {\r\n        let selected = e.target.files[0]\r\n\r\n        if(selected && types.includes(selected.type)) {\r\n            setFile(selected);\r\n            setError('');\r\n        } else {\r\n            setFile(null);\r\n            setError('Please select an image file (png or jpeg) ');\r\n        }\r\n\r\n    };\r\n\r\n    return(\r\n        <form>\r\n            <label>\r\n                <input type=\"file\" onChange={changeHandler}/>\r\n                <span>+</span>\r\n            </label>\r\n            <div className=\"output\">\r\n                {error && <div className=\"error\">{ error }</div>}\r\n                {file && <div>{ file.name }</div>}\r\n                {file && <ProgressBar file={file} setFile={setFile} />}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default UploadForm;","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n                                    .orderBy('createdAt', 'desc')\r\n                                    .onSnapshot(snap => {\r\n                                        let documents = [];\r\n                                        snap.forEach(doc => {\r\n                                            documents.push({...doc.data(), id: doc.id});\r\n                                        });\r\n                                        setDocs(documents);\r\n                                    });\r\n        return () => unsub();\r\n\r\n    }, [collection]);\r\n    \r\n    return { docs };\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n    const { docs }  = useFirestore('images');\r\n\r\n    return(\r\n        <div className=\"img-grid\">\r\n            {docs && docs.map(doc => (\r\n                <motion.div className=\"img-wrap\" key={doc.id}\r\n                layout\r\n                whileHover={{ opacity: 1}}s\r\n                onClick={() => setSelectedImg(doc.url)}\r\n                >\r\n                    <motion.img src={doc.url} alt=\"uploaded pic\"\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    transition={{ delay: 1 }} \r\n                    />  \r\n                </motion.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ setSelectedImg, selectedImg }) => {\r\n\r\n    const handleClick = (e) => {\r\n        if (e.target.classList.contains('backdrop')) {\r\n          setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <motion.div className=\"backdrop\" onClick={handleClick}\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        >\r\n            <motion.img src={selectedImg} alt=\"enlarged pic\"\r\n            initial={{ y: \"-100vh\" }}\r\n            animate={{ y: 0 }} />\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\nimport { useState } from 'react';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid  setSelectedImg={setSelectedImg} />\n      {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} /> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}